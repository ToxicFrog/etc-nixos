# Run in background and check every 60 seconds.
set daemon  60              # check services at 1-minute intervals

# Log to syslog with "daemon" (as opposed to "user") facility.
set logfile syslog facility log_daemon

# Runtime state files.
set pidfile   /run/monit.pid
set idfile    /run/monit.id
set statefile /run/monit.state

# Mail servers for alert delivery.
set mailserver smtp.teksavvy.com port 25

# Enable queue for undelivered email alerts
set eventqueue
    basedir /run/monit.events
    slots 100

## Do not alert when Monit starts, stops or performs a user initiated action.
## This filter is recommended to avoid getting alerts for trivial cases.
set alert root@ancilla.ca not on { instance, action }

## Enable the httpd and permit connections from localhost and from ancilla.
set httpd port 2812
  use address 0.0.0.0
  allow localhost
  allow 192.168.86.0/24

check system $HOST
  # if memory usage > 90% then alert
  if swap usage > 50% then alert
  # Running the backups will peg the load indicators for a while.
  # So we only alert if it goes over the limit for an entire hour.
  if loadavg (5min) > 4 for 60 cycles then alert
  # Let's try monitoring CPU on ancilla too.
  if cpu usage (user) > 70% for 30 cycles then alert
  if cpu usage (system) > 30% for 30 cycles then alert
  if cpu usage (wait) > 20% for 30 cycles then alert

# check directory mail_certificates with path /var/lib/acme/mail.ancilla.ca
#   if failed gid mail then exec "/usr/bin/env chgrp -R mail /var/lib/acme/mail.ancilla.ca"

# TODO: monitor zpool fullness and temperatures

# {% for mount in mountpoints %}
# check filesystem fs{{mount}} with path {{mount}}
#   if space usage > 85% then alert
#   if inode usage > 99% then alert

# {% endfor %}
# {% for dev in devices %}
# check program temperature{{dev}} with path "/usr/local/sbin/hddtemp {{dev}}"
#   if status > 55 for 5 cycles then alert
#   if status > 65 then alert

# {% endfor %}

